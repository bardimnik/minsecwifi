#!/bin/sh

# (C) 2015-2016 Cryptopunks.org <Xa2ee at cryptopunks dot org>

# Minimalistic and secure Wifi manager 

# Needed packages: openvpn wpasupplicant macchanger

MINSECWIFI_CONF="./minsecwifi.conf"

if [ ! $EDITOR ]; then
    EDITOR=vim
fi

usage() {
        echo "Usage:"
        echo "$0 [OPTION] 
  -s, --scan                    scan networks
  -r, --run                     run all services 
                                (variable START_SEQUENCE in minsecwifi.conf)
  -k, --killall                 kill all services
  -ew, --edit-wpasupplicant     edit wpa_supplicant.conf
  -em, --edit-minsecwifi        edit minsecwifi.conf
  -ub, --unblock                unblock wifi adaptor
  -iu, --interface-up           wifi interface down
  -id, --interface-down         wifi interface up
  -cm, --change-mac             change mac address
  -ch, --connect-hotspot        connect to hotspot
  -gd, --get-dhcp               get dhcp address
  -rd, --rewrite-dns            rewrite dns servers
  -cv, --connect-vpn            connect to vpn server
  -xw, --example-wpasupplicant  show example config for wpa_supplicant
  -xm, --example-minsecwifi     show example config for minsecwifi
  -fp, --fix-permissions        fix permissions for wpa_supplicant.conf"
    exit
}

show_example_minsecwifi() {
    echo '# Wifi device (run `ifconfig -a`)
WIFI_DEV="wlp3s0"
# Wpa_supplicant configuration file
WPA_CONF="/etc/wpa_supplicant/wpa_supplicant.conf"
# DNS-servers
DNS="nameserver 208.67.222.222\nnameserver 208.67.220.220"
# OpenVPN configuration file (for client)
OVPN_CONF="/etc/openvpn/client.ovpn"
# for run to all services (argument '-r')
START_SEQUENCE="killallprocess unblock interface_down change_mac interface_up fixperm connect_hotspot get_dhcp_address rewrite_dns connect_vpn"
    ' 
}

check_needed_programs() {
    notinstalled=""
    # without sudo
    PATH=$PATH:/usr/sbin:/sbin
    command -v wpa_supplicant >/dev/null 2>&1 || notinstalled="wpa_supplicant"
    command -v openvpn >/dev/null 2>&1 || notinstalled="$notinstalled openvpn"
    command -v macchanger > /dev/null 2>&1 || notinstalled="$notinstalled macchanger"
    command -v dhclient > /dev/null 2>&1 || notinstalled="$notinstalled dhclient"

    if [ ! -z "$notinstalled" ]; then
        for progname in $notinstalled; do
            echo "The program '$progname' is currently not installed."
        done
        echo
        echo "Please install this packages in your system."
        echo "Aborting."
        exit 1
    fi
}

show_example_wpasupplicant() {
    echo 'network={
	ssid="access point 1"
        psk="password"
}
network={
        ssid="access point 2"
        psk="password"
}
' 
}

fixperm() {
    echo "Fix permissions for wpa_supplicant.conf:"
    chown root:root $WPA_CONF && sudo chmod 600 $WPA_CONF && echo "ok"
}

checkperm() {
    if [[ "$USER" != 'root' ]]; then
        echo "Sorry, you need to run this as root"
        exit
    fi
}

killallprocess() {
    # killing old processes
    (kill -9 `ps aux | grep openvpn | awk {'print $2'}`) 2> /dev/null
    (kill -9 `ps aux | grep wpa_supplicant | awk {'print $2'}`) 2> /dev/null
    (kill -9 `ps aux | grep dhclient | awk {'print $2'}`) 2> /dev/null
}

unblock() {
    echo "Unblock Wifi-device: "
    rfkill unblock 0 && echo OK
}

interface_down() {
    echo "Wifi interface down: "
    ifconfig $WIFI_DEV down && echo OK
}

change_mac() {
    echo "Change MAC-address: "
    macchanger -r  $WIFI_DEV && echo OK
}

interface_up() {
    echo "Wifi interface up:"
    ifconfig $WIFI_DEV up && echo OK
}

connect_hotspot() {
    echo "Connecting Wifi: "
    rm -f /var/run/wpa/$WIFI_DEV
    wpa_supplicant -B -i $WIFI_DEV -c $WPA_CONF && echo OK
}

get_dhcp_address() {
    echo "Get DHCP address:"
    dhclient $WIFI_DEV && echo OK
}

rewrite_dns() {
    echo "Unlock resolv.conf:"
    chattr -i /etc/resolv.conf && echo OK
    echo "Rewrite DNS: "
    echo -e $DNS > /etc/resolv.conf && echo OK
    echo "Lock resolv.conf:"
    chattr +i /etc/resolv.conf && echo OK
}

connect_vpn() {
    echo "Connecting VPN: "
    openvpn --config $OVPN_CONF && echo OK
}

check_conf() {
    if [ -f $MINSECWIFI_CONF ]; then
      source $MINSECWIFI_CONF
    else
        echo -e "I need configuration file \"$MINSECWIFI_CONF\"\n"
        echo -e "Please run:"
        echo -e "./minsecwifi --example-minsecwifi | sudo tee $MINSECWIFI_CONF"
        echo
        echo -e "And edit config:"
        echo -e "$ sudo minsecwifi -em"
        exit
    fi
    }

# FIXME! replace < 1
if [ $# -ne 1 ]; then
    usage
fi

check_needed_programs

if [ $1 = "-s" ] || [ $1 = "--scan" ]; then
    check_conf
    checkperm
    echo "Scan hotspots..."
    hotspots=`iw dev $WIFI_DEV scan | grep -i ssid | sed s/SSID://`
    echo "Available hotspots:"
    echo 
    for ssid in $hotspots; do echo "    $ssid"; done
    exit
elif [ $1 = "-r" ] || [ $1 = "--run" ]; then
    check_conf
    checkperm
    echo "Connecting"
    # run custom functions 
    if [ ! -z "$START_SEQUENCE" ]; then
        for run_process in $START_SEQUENCE; do $run_process; done
    else
        echo "Needing options START_SEQUENCE in $MINSECWIFI_CONF"
        exit
    fi
elif [ $1 = "-k" ] || [ $1 = "--killall" ]; then
    checkperm
    echo "kill wpa_supplicant, openvpn processes..."
    killallprocess
    exit
elif [ $1 = "-ew" ] || [ $1 = "--edit-wpasupplicant" ]; then
    checkperm
    $EDITOR $WPA_CONF
    exit
elif [ $1 = "-em" ] || [ $1 = "--edit-minsecwifi" ]; then
    $EDITOR $MINSECWIFI_CONF
    exit
elif [ $1 = "-ub" ] || [ $1 = "--unblock" ]; then
    checkperm
    unblock
    exit
elif [ $1 = "-id" ] || [ $1 = "--interface-down" ]; then
    check_conf
    checkperm
    interface_down
    exit
elif [ $1 = "-iu" ] || [ $1 = "--interface-up" ]; then
    check_conf
    checkperm
    interface_up
    exit
elif [ $1 = "-cm" ] || [ $1 = "--change-mac" ]; then
    check_conf
    checkperm
    change_mac
    exit
elif [ $1 = "-ch" ]  || [ $1 = "--connect-hotspot" ]; then
    check_conf
    checkperm
    connect_hotspot
    exit
elif [ $1 = "-gd" ] || [ $1 = "--get-dhcp" ]; then
    check_conf
    checkperm
    get_dhcp_address
    exit
elif [ $1 = "-rd" ] || [ $1 = "--rewrite-dns" ]; then
    checkperm
    rewrite_dns
    exit
elif [ $1 = "-cv" ] || [ $1 = "--connect-vpn" ]; then
    check_conf
    checkperm
    connect_vpn
    exit
elif [ $1 = "-xw" ] || [ $1 = "--example-wpasupplicant" ]; then
    show_example_wpasupplicant
    exit
elif [ $1 = "-xm" ] || [ $1 = "--example-minsecwifi" ]; then
    show_example_minsecwifi
    exit
elif [ $1 = "-fp" ] || [ $1 = "--fix-permissions" ]; then
    checkperm
    fixperm
    exit
else
    usage
fi


